package tio

import (
	"fmt"

	"github.com/spf13/cobra"
	"github.com/whereiskurt/tio-cli/internal/app/tio/vulnerability"
	"github.com/whereiskurt/tio-cli/internal/pkg/tio/ui"
)

//Cobra sub-command
var tagsCmd = &cobra.Command{
	Aliases: []string{"tags"},
	Use:     "tags",
	PreRun:  MainVulnCmd.PreRun,
	Run:     mainTags,
}

func init() {
	MainVulnCmd.AddCommand(tagsCmd)

	tagsCmd.SetHelpFunc(helpOutputTags)
	tagsCmd.SetUsageFunc(usageOutputTags)

	return
}

func helpOutputTags(cmd *cobra.Command, args []string) {
	printTagsHelp()
	return
}
func usageOutputTags(cmd *cobra.Command) error {
	printTagsHelp()
	return nil
}

func printTagsHelp() {
	fmt.Println(fmt.Sprintf(`
TAGS
----------------------------->
  `))
	return
}

func mainTags(cmd *cobra.Command, args []string) {

	fmt.Printf("%+v\n\n", VulnConfig)

	configSuccess := VulnConfig.Base.IsSuccessState
	if !configSuccess {
		cli := ui.NewCommandLineInterface(VulnConfig.Base)
		configSuccess := cli.PromptForConfigKeys()
		if !configSuccess {
			return
		}
	}

	c := vulnerability.NewTags(VulnConfig)

	c.Execute()
	return
}
