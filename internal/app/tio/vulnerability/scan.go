package vulnerability

import (
	"github.com/whereiskurt/tio-cli/internal/pkg/tio"
	"github.com/whereiskurt/tio-cli/internal/pkg/tio/dao"
	"strconv"
)

type Scan struct {
	Config *tio.VulnerabilityConfig

	Debug func(string)
	Info  func(string)
	Warn  func(string)
	Error func(string)

	Debugf func(string, ...interface{})
	Infof  func(string, ...interface{})
	Warnf  func(string, ...interface{})
	Errorf func(string, ...interface{})
}

func NewScan(config *tio.VulnerabilityConfig) *Scan {
	s := new(Scan)
	s.Config = config
	//Convenience functions
	s.Debug = config.Base.Logger.Debug
	s.Debugf = config.Base.Logger.Debugf
	s.Info = config.Base.Logger.Info
	s.Infof = config.Base.Logger.Infof
	s.Warn = config.Base.Logger.Warn
	s.Warnf = config.Base.Logger.Warnf
	s.Error = config.Base.Logger.Error
	s.Errorf = config.Base.Logger.Errorf
	return s
}

func (s *Scan) Execute() error {
	s.Info("Executing vulnerability.scan.Execute()")

	var previousOffset, _ = strconv.Atoi(s.Config.Previous)

	trans := dao.NewTranslator(s.Config)

	scans, err := trans.GetScans()
	if err != nil {
		s.Errorf("Failed to GetScans(): %s", err)
		return err
	}

	for _, scan := range scans {
		d, _ := trans.GetScanDetail(scan.ScanId, previousOffset)
		s.Debugf("Looking up: %+v", d)
	}

	return nil
}
