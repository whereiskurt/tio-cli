package vulnerability

import (
	"fmt"
	"github.com/whereiskurt/tio-cli/internal/pkg/tio"
	"github.com/whereiskurt/tio-cli/internal/pkg/tio/dao"
	"github.com/whereiskurt/tio-cli/internal/pkg/tio/ui"
	"strconv"
	"sync"
)

type Scan struct {
	Config            *tio.VulnerabilityConfig
	Workers           *sync.WaitGroup
	ConcurrentWorkers int
}

func NewScan(config *tio.VulnerabilityConfig) *Scan {
	s := new(Scan)
	s.Config = config

	s.Workers = new(sync.WaitGroup)
	s.ConcurrentWorkers, _ = strconv.Atoi(config.Base.ConcurrentWorkers)

	return s
}

func (s *Scan) Execute() error {
	trans := dao.NewTranslator(s.Config)
	cli := ui.NewCommandLineInterface(s.Config.Base)
	chanScanDetails := make(chan dao.ScanHistory, 2)

	go trans.GoGetScanDetails(chanScanDetails, 3)

	var recs []dao.ScanHistory
	for record := range chanScanDetails {
		recs = append(recs, record)
		fmt.Println(ui.GREEN + "Scan Overview:" + ui.RESET)
		cli.DrawShortTable([]dao.ScanHistory{record})
		fmt.Println()

		fmt.Println(ui.GREEN + "Run Schedule:" + ui.RESET)
		cli.DrawRunSchedule(record)
		fmt.Println()

		fmt.Println(ui.GREEN + "Run History with Plugin Severity:" + ui.RESET)
		cli.DrawRunHistory(record)
		fmt.Println()

	}
	fmt.Println(fmt.Sprintf(ui.GREEN+"Summary of %d Scans"+ui.RESET, len(recs)))
	cli.DrawDashboard(recs)

	//trans.Debugf("Stats: tenable.portal:%+v", trans.PortalCache.Portal.Stats.GetCounts())
	//trans.Debugf("Stats: tio.cache:%+v", trans.PortalCache.Stats.GetCounts())
	//trans.Infof("Stats: dao.translator:%+v", trans.Stats.GetCounts())

	//cli.DrawShortTable(recs)
	//cli.DrawDashboard(recs)

	return nil
}
