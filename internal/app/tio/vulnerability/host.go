package vulnerability

import (
	"github.com/whereiskurt/tio-cli/internal/pkg/tio"
	"github.com/whereiskurt/tio-cli/internal/pkg/tio/dao"
	"github.com/whereiskurt/tio-cli/internal/pkg/tio/ui"

	"strconv"
	"sync"
)

type Host struct {
	Config            *tio.VulnerabilityConfig
	Workers           *sync.WaitGroup
	ConcurrentWorkers int
}

func NewHost(config *tio.VulnerabilityConfig) (h *Host) {
	h = new(Host)
	h.Config = config

	h.Workers = new(sync.WaitGroup)
	h.ConcurrentWorkers, _ = strconv.Atoi(config.Base.ConcurrentWorkers)

	return h
}

func (h *Host) Execute() error {
	trans := dao.NewTranslator(h.Config)
	cli := ui.NewCommandLineInterface(h.Config)
	trans.Info("Executing vulnerability.host.Execute()")

	ch := make(chan dao.ScanHistory, 2)

	go trans.GoGetHostDetails(ch, 6)

	for rec := range ch {
		if len(rec.ScanHistoryDetails) == 0 {
			continue
		}

		current := &rec.ScanHistoryDetails[0]
		keys := trans.SortScanHostKeys(current)

		cli.DrawHosts(rec.ScanHistoryDetails[0], keys)

	}

	return nil
}
