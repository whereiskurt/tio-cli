package vulnerability

import (
	"strconv"
	"sync"

	"github.com/whereiskurt/tio-cli/internal/pkg/tio"
	"github.com/whereiskurt/tio-cli/internal/pkg/tio/dao"
)

type Tags struct {
	Config            *tio.VulnerabilityConfig
	Workers           *sync.WaitGroup
	ConcurrentWorkers int
}

func NewTags(config *tio.VulnerabilityConfig) *Tags {
	s := new(Tags)
	s.Config = config

	s.Workers = new(sync.WaitGroup)
	s.ConcurrentWorkers, _ = strconv.Atoi(config.Base.ConcurrentWorkers)

	return s
}

func (tagsCmd *Tags) Execute() error {
	var trans = dao.NewTranslator(tagsCmd.Config)
	//	var cli = ui.NewCommandLineInterface(tagsCmd.Config.Base)

	//	shouldPrintCSV := tagsCmd.Config.Base.OutputCSVMode
	//	shouldPrintJSON := tagsCmd.Config.Base.OutputJSONMode

	trans.Info("Executing tio.vulnerability.tags.Execute()")
	trans.GetTagCategory()

	ch := make(chan dao.ScanHistory, 2)

	go trans.GoGetHostDetails(ch, 6)

	for rec := range ch {

		//current := &rec.ScanHistoryDetails[0]
		//keys := trans.SortScanHostKeys(current)

		if len(rec.ScanHistoryDetails) > 0 {
			//cli.DrawHosts(rec.ScanHistoryDetails[0], keys)
		}

	}


	return nil
}
